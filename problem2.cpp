//problem2.cpp: This file holds the for the solution for problem 2

/*
* Problem 2: Even Fibonacci Numbers
* 
* Each new term in the Fibonacci sequence is generated by adding the previous
* two terms. By starting with 1 and 2, the first 10 terms will be:
* 
* 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
* 
* By considering the terms in the Fibonacci sequence whose values do not
* exceed four million, find the sum of the even-valued terms.
* 
* Solution: 4613732
* Time: 0 ms
*/

#include "kmath.h"     //will use kmath::swap()

//No clever strategy needed, simple computation
int problem2()
{
	int sum{ 0 };

	int current{ 1 };
	int next{ 2 };
	
	//Iterate through the fibonacci sequence so lang as I don't exceed 4 million
	while (current <= 4000000)
	{
		if (current % 2 == 0) sum += current;     //if even, add value to the sum
		kmath::swap(&current, &next);
		next += current;
	}

	return sum;
}